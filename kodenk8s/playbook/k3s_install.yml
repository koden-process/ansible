---
- name: Install K3s on koden0-3
  hosts: koden0,koden1,koden2,koden3
  become: yes
  vars:
    k3s_version: v1.29.4+k3s1  # adapte la version si besoin
    k3s_install_url: https://get.k3s.io
  tasks:
    - name: Ensure curl is installed
      package:
        name: curl
        state: present

    - name: Remove old Kubernetes binaries that may conflict with K3s
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /usr/bin/kubectl
        - /usr/bin/crictl
        - /usr/bin/ctr
      ignore_errors: yes

    - name: Install K3s
      shell: |
        curl -sfL {{ k3s_install_url }} | INSTALL_K3S_VERSION={{ k3s_version }} sh -
      args:
        creates: /usr/local/bin/k3s

    - name: Wait for K3s service to be active
      shell: |
        systemctl is-active k3s || systemctl is-active k3s-agent
      register: k3s_status
      retries: 10
      delay: 5
      until: k3s_status.stdout == 'active'

    - name: Afficher le token de join (pour les workers)
      shell: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
      when: inventory_hostname == 'koden0'  # master node

    - name: Afficher l'IP du master (pour join)
      ansible.builtin.command: hostname -I
      register: master_ip
      when: inventory_hostname == 'koden0'

    - name: Afficher instructions de join pour les workers
      debug:
        msg: "Sur les workers, ex√©cutez : curl -sfL {{ k3s_install_url }} | K3S_URL=https://{{ hostvars['koden0'].master_ip.stdout.split()[0] }}:6443 K3S_TOKEN={{ hostvars['koden0'].k3s_token.stdout }} sh -"
      when: inventory_hostname == 'koden0'

    - name: Join cluster (workers)
      shell: |
        curl -sfL {{ k3s_install_url }} | K3S_URL=https://{{ hostvars['koden0'].master_ip.stdout.split()[0] }}:6443 K3S_TOKEN={{ hostvars['koden0'].k3s_token.stdout }} sh -
      when: inventory_hostname != 'koden0'
      args:
        creates: /usr/local/bin/k3s-agent
      register: join_result
      ignore_errors: yes

    - name: Debug join_result if join failed
      debug:
        var: join_result
      when:
        - inventory_hostname != 'koden0'
        - join_result is defined
        - join_result.rc is defined
        - join_result.rc != 0

    - name: Show k3s-agent logs if join failed
      shell: journalctl -u k3s-agent --no-pager | tail -30
      when:
        - inventory_hostname != 'koden0'
        - join_result is defined
        - join_result.rc is defined
        - join_result.rc != 0
      register: agent_logs
      ignore_errors: yes

    - name: Print k3s-agent logs if join failed
      debug:
        var: agent_logs.stdout
      when:
        - inventory_hostname != 'koden0'
        - agent_logs is defined
        - agent_logs.stdout is defined

    - name: Ensure k3s binary is present
      stat:
        path: /usr/local/bin/k3s
      register: k3s_bin

    - name: Create symlink for kubectl in /usr/local/bin if missing and k3s exists
      file:
        src: /usr/local/bin/k3s
        dest: /usr/local/bin/kubectl
        state: link
      when:
        - k3s_bin.stat.exists
        - not k3s_bin.stat.islnk or k3s_bin.stat.lnk_source != '/usr/local/bin/kubectl'
      ignore_errors: yes

    - name: Create symlink for kubectl in /usr/bin if missing and /usr/local/bin/kubectl exists
      file:
        src: /usr/local/bin/kubectl
        dest: /usr/bin/kubectl
        state: link
      when:
        - ansible_facts['os_family'] != 'Darwin'
        - ansible_facts['architecture'] == 'x86_64' or ansible_facts['architecture'] == 'aarch64'
        - ansible_facts['distribution'] != 'MacOSX'
        - k3s_bin.stat.exists
      ignore_errors: yes

    - name: Check kubectl version (via k3s kubectl)
      command: k3s kubectl version
      register: kubectl_version
      ignore_errors: yes

    - name: Show kubectl version
      debug:
        var: kubectl_version.stdout
      when: kubectl_version is defined and kubectl_version.stdout is defined

    - name: Ensure /etc/rancher/k3s/k3s.yaml is world-readable
      file:
        path: /etc/rancher/k3s/k3s.yaml
        mode: '0644'
      when: inventory_hostname == 'koden0'
      ignore_errors: yes

    - name: Ensure KUBECONFIG is set in .bashrc
      lineinfile:
        path: /home/{{ ansible_user | default('skit') }}/.bashrc
        line: 'export KUBECONFIG=/etc/rancher/k3s/k3s.yaml'
        state: present
      when: inventory_hostname == 'koden0'
      ignore_errors: yes

    - name: Ensure KUBECONFIG is set in .zshrc
      lineinfile:
        path: /home/{{ ansible_user | default('skit') }}/.zshrc
        line: 'export KUBECONFIG=/etc/rancher/k3s/k3s.yaml'
        state: present
      when: inventory_hostname == 'koden0'
      ignore_errors: yes
